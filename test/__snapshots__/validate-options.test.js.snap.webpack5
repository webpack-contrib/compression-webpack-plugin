// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validate options should throw an error on the "algorithm" option with "true" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.algorithm should be one of these:
   string | function
   -> The compression algorithm/function.
   Details:
    * options.algorithm should be a string.
    * options.algorithm should be an instance of function."
`;

exports[`validate options should throw an error on the "cache" option with "() => {}" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.cache should be one of these:
   boolean | string
   -> Enable file caching. Ignored in webpack 5, for webpack 5 please use https://webpack.js.org/configuration/other-options/#cache.
   Details:
    * options.cache should be a boolean.
    * options.cache should be a string."
`;

exports[`validate options should throw an error on the "compressionOptions" option with "1024" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.compressionOptions should be an object:
   object { â€¦ }
   -> Compression options for \`algorithm\`."
`;

exports[`validate options should throw an error on the "deleteOriginalAssets" option with "true" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.deleteOriginalAssets should be a boolean.
   -> Whether to delete the original assets or not."
`;

exports[`validate options should throw an error on the "exclude" option with "[{},"foo",true]" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.exclude should be one of these:
   [RegExp | non-empty string, ...] | RegExp | non-empty string
   -> Filtering rules.
   Details:
    * options.exclude[2] should be one of these:
      RegExp | non-empty string
      -> Filtering rule as regex or string.
      Details:
       * options.exclude[2] should be an instance of RegExp.
       * options.exclude[2] should be a non-empty string."
`;

exports[`validate options should throw an error on the "exclude" option with "[true]" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.exclude should be one of these:
   [RegExp | non-empty string, ...] | RegExp | non-empty string
   -> Filtering rules.
   Details:
    * options.exclude[0] should be one of these:
      RegExp | non-empty string
      -> Filtering rule as regex or string.
      Details:
       * options.exclude[0] should be an instance of RegExp.
       * options.exclude[0] should be a non-empty string."
`;

exports[`validate options should throw an error on the "exclude" option with "true" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.exclude should be one of these:
   [RegExp | non-empty string, ...] | RegExp | non-empty string
   -> Filtering rules.
   Details:
    * options.exclude should be an array:
      [RegExp | non-empty string, ...]
    * options.exclude should be one of these:
      RegExp | non-empty string
      -> Filtering rule as regex or string.
      Details:
       * options.exclude should be an instance of RegExp.
       * options.exclude should be a non-empty string."
`;

exports[`validate options should throw an error on the "filename" option with "true" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.filename should be one of these:
   string | function
   -> The target asset filename.
   Details:
    * options.filename should be a string.
    * options.filename should be an instance of function."
`;

exports[`validate options should throw an error on the "include" option with "[{},"foo",true]" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.include should be one of these:
   [RegExp | non-empty string, ...] | RegExp | non-empty string
   -> Filtering rules.
   Details:
    * options.include[2] should be one of these:
      RegExp | non-empty string
      -> Filtering rule as regex or string.
      Details:
       * options.include[2] should be an instance of RegExp.
       * options.include[2] should be a non-empty string."
`;

exports[`validate options should throw an error on the "include" option with "[true]" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.include should be one of these:
   [RegExp | non-empty string, ...] | RegExp | non-empty string
   -> Filtering rules.
   Details:
    * options.include[0] should be one of these:
      RegExp | non-empty string
      -> Filtering rule as regex or string.
      Details:
       * options.include[0] should be an instance of RegExp.
       * options.include[0] should be a non-empty string."
`;

exports[`validate options should throw an error on the "include" option with "true" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.include should be one of these:
   [RegExp | non-empty string, ...] | RegExp | non-empty string
   -> Filtering rules.
   Details:
    * options.include should be an array:
      [RegExp | non-empty string, ...]
    * options.include should be one of these:
      RegExp | non-empty string
      -> Filtering rule as regex or string.
      Details:
       * options.include should be an instance of RegExp.
       * options.include should be a non-empty string."
`;

exports[`validate options should throw an error on the "minRatio" option with "0.8" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.minRatio should be a number.
   -> Only assets that compress better than this ratio are processed (\`minRatio = Compressed Size / Original Size\`)."
`;

exports[`validate options should throw an error on the "test" option with "[{},"foo",true]" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.test should be one of these:
   [RegExp | non-empty string, ...] | RegExp | non-empty string
   -> Filtering rules.
   Details:
    * options.test[2] should be one of these:
      RegExp | non-empty string
      -> Filtering rule as regex or string.
      Details:
       * options.test[2] should be an instance of RegExp.
       * options.test[2] should be a non-empty string."
`;

exports[`validate options should throw an error on the "test" option with "[true]" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.test should be one of these:
   [RegExp | non-empty string, ...] | RegExp | non-empty string
   -> Filtering rules.
   Details:
    * options.test[0] should be one of these:
      RegExp | non-empty string
      -> Filtering rule as regex or string.
      Details:
       * options.test[0] should be an instance of RegExp.
       * options.test[0] should be a non-empty string."
`;

exports[`validate options should throw an error on the "test" option with "true" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.test should be one of these:
   [RegExp | non-empty string, ...] | RegExp | non-empty string
   -> Filtering rules.
   Details:
    * options.test should be an array:
      [RegExp | non-empty string, ...]
    * options.test should be one of these:
      RegExp | non-empty string
      -> Filtering rule as regex or string.
      Details:
       * options.test should be an instance of RegExp.
       * options.test should be a non-empty string."
`;

exports[`validate options should throw an error on the "threshold" option with "1024" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options.threshold should be a number.
   -> Only assets bigger than this size are processed. In bytes."
`;

exports[`validate options should throw an error on the "unknown" option with "/test/" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { test?, include?, exclude?, algorithm?, compressionOptions?, threshold?, minRatio?, deleteOriginalAssets?, filename?, cache? }"
`;

exports[`validate options should throw an error on the "unknown" option with "[]" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { test?, include?, exclude?, algorithm?, compressionOptions?, threshold?, minRatio?, deleteOriginalAssets?, filename?, cache? }"
`;

exports[`validate options should throw an error on the "unknown" option with "{"foo":"bar"}" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { test?, include?, exclude?, algorithm?, compressionOptions?, threshold?, minRatio?, deleteOriginalAssets?, filename?, cache? }"
`;

exports[`validate options should throw an error on the "unknown" option with "{}" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { test?, include?, exclude?, algorithm?, compressionOptions?, threshold?, minRatio?, deleteOriginalAssets?, filename?, cache? }"
`;

exports[`validate options should throw an error on the "unknown" option with "1" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { test?, include?, exclude?, algorithm?, compressionOptions?, threshold?, minRatio?, deleteOriginalAssets?, filename?, cache? }"
`;

exports[`validate options should throw an error on the "unknown" option with "false" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { test?, include?, exclude?, algorithm?, compressionOptions?, threshold?, minRatio?, deleteOriginalAssets?, filename?, cache? }"
`;

exports[`validate options should throw an error on the "unknown" option with "test" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { test?, include?, exclude?, algorithm?, compressionOptions?, threshold?, minRatio?, deleteOriginalAssets?, filename?, cache? }"
`;

exports[`validate options should throw an error on the "unknown" option with "true" value 1`] = `
"Invalid options object. Compression Plugin has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { test?, include?, exclude?, algorithm?, compressionOptions?, threshold?, minRatio?, deleteOriginalAssets?, filename?, cache? }"
`;
